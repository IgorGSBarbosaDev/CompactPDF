#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Launcher para Interface Modular - CompactPDF
============================================

Launcher espec√≠fico para a nova interface modular que configura
corretamente os paths e imports.
"""

import sys
import os
from pathlib import Path

def configurar_paths():
    """Configura os paths necess√°rios para os imports."""
    # Diret√≥rio do projeto
    project_root = Path(__file__).parent.parent
    src_dir = project_root / "src"
    gui_dir = src_dir / "gui"
    
    # Adicionar paths
    paths_to_add = [
        str(project_root),
        str(src_dir),
        str(gui_dir)
    ]
    
    for path in paths_to_add:
        if path not in sys.path:
            sys.path.insert(0, path)
    
    print(f"üìÅ Projeto: {project_root}")
    print(f"üìÅ Src: {src_dir}")
    print(f"üìÅ GUI: {gui_dir}")

def main():
    """Fun√ß√£o principal."""
    print("üöÄ Iniciando CompactPDF - Interface Modular")
    print("=" * 50)
    
    # Configurar paths
    configurar_paths()
    
    try:
        # Importar e executar GUI modular
        import tkinter as tk
        from main_window import CompactPDFGUI
        
        print("‚úÖ M√≥dulos importados com sucesso!")
        print("üé® Iniciando interface gr√°fica...")
        
        # Criar aplica√ß√£o
        root = tk.Tk()
        app = CompactPDFGUI(root)
        
        print("‚úÖ Interface iniciada!")
        
        # Executar
        app.run()
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        print("\nüîß Verifique se todos os m√≥dulos est√£o corretos:")
        print("  - main_window.py")
        print("  - styles.py")
        print("  - file_manager.py")
        print("  - config_panel.py")
        print("  - processing_panel.py")
        print("  - results_panel.py")
        
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
